package com.monocept.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.sql.DataSource;

import com.monocept.entry.Account;
import com.monocept.entry.Customer;

public class CustomerDao {

    static DataSource datasource;

    private static final String VALIDATE_CUSTOMER_QUERY = "SELECT * FROM customer WHERE email_id = ? AND password = ?";

    public static Customer validateCustomer(String email, String password) {
        try (Connection connection = DataBaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(VALIDATE_CUSTOMER_QUERY)) {

            statement.setString(1, email);
            statement.setString(2, password);
            ResultSet resultSet = statement.executeQuery();

            if (resultSet.next()) {
                int customerId = resultSet.getInt("customer_id");
                String firstName = resultSet.getString("first_name");
                String lastName = resultSet.getString("last_name");
                return new Customer(customerId, firstName, lastName, email, password);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }

    public static List<Customer> getCustomers() {
        Map<Integer, Customer> customerMap = new HashMap<>();
        try (Connection conn = DataBaseUtil.getConnection();
             Statement state = conn.createStatement()) {

            String query = "SELECT c.customer_id, c.first_name, c.last_name, a.account_number, a.balance " +
                           "FROM customer c " +
                           "JOIN accounts a ON c.customer_id = a.customer_id";

            ResultSet rs = state.executeQuery(query);

            while (rs.next()) {
                int customerId = rs.getInt("customer_id");
                String firstName = rs.getString("first_name");
                String lastName = rs.getString("last_name");
                int accountNumber = rs.getInt("account_number");
                double balance = rs.getDouble("balance");

                Customer customer = customerMap.get(customerId);
                if (customer == null) {
                    customer = new Customer(customerId, firstName, lastName);
                    customerMap.put(customerId, customer);
                }

                Account account = new Account(customerId, accountNumber, balance);
                customer.addAccount(account);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return new ArrayList<>(customerMap.values());
    }
}
